version: "3.9"

services:
  # === API Kai ===
  kai:
    build:
      context: .
      dockerfile: docker/Dockerfile.cpu
    working_dir: /app/agents/kai-api
    command: ${KAI_CMD:-uvicorn app.main:app --host 0.0.0.0 --port 8000}
    env_file: .env
    ports:
      - "8001:8000"
    depends_on:
      - redis
    restart: unless-stopped

  # === API MedVerify ===
  medverify:
    build:
      context: .
      dockerfile: docker/Dockerfile.cpu
    working_dir: /app/agents/medverify-api
    command: ${MEDVERIFY_CMD:-uvicorn app.main:app --host 0.0.0.0 --port 8000}
    env_file: .env
    ports:
      - "8002:8000"
    depends_on:
      - redis
    restart: unless-stopped

  # === OCR/Worker (contoh job) ===
  ocr_worker:
    build:
      context: .
      dockerfile: docker/Dockerfile.cpu
    working_dir: /app/agents/ocr-worker
    command: ${OCR_CMD:-python -m app.worker}
    env_file: .env
    depends_on:
      - redis
    restart: unless-stopped

  # === YOLO GPU (opsional, kalau nanti pindah VM GPU) ===
  yolo_gpu:
    build:
      context: .
      dockerfile: docker/Dockerfile.gpu
    working_dir: /app/agents/yolo-infer-gpu
    command: ${YOLO_CMD:-uvicorn server:app --host 0.0.0.0 --port 8000}
    env_file: .env
    ports:
      - "8003:8000"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: ["gpu"]
    restart: unless-stopped
    # HANYA jalan di VM yang ada GPU + nvidia-container-toolkit

  # === Redis (cache/session/queue) ===
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data

volumes:
  redis_data:
